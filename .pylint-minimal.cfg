[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=no

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Use multiple processes to speed up Pylint.
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Allow optimization of some AST trees. This will activate a peephole AST
# optimizer, which will apply various small optimizations. For instance, it can
# be used to obtain the result of joining multiple strings with the addition
# operator. Joining a lot of strings can lead to a maximum recursion error in
# Pylint and this flag can prevent that. It has one side effect, the resulting
# AST will be different than the one from reality.
optimize-ast=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
enable=E0111,W0105,W0311,E0106,W0199,E0701,E1305,E0213,E0108,W1303,W1501,E1126,W1306,E1121,E1127,E0602,E0103,E0302,E0100,E0202,E1120,E0107,E0102,W0102,E0101,E0105,W1305,E0104,E1124,E1306,W0404,W0312,W0120,E0203,W0231,W0612,E0211,E0001,W0104,W1304,R0401,E1123

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=misplaced-bare-raise,protected-access,nonlocal-without-binding,invalid-encoded-data,wrong-import-position,unnecessary-pass,not-callable,expression-not-assigned,singleton-comparison,bad-reversed-sequence,logging-format-truncated,old-raise-syntax,bad-mcs-classmethod-argument,consider-using-enumerate,pointless-string-statement,cmp-method,bad-indentation,multiple-statements,round-builtin,invalid-name,return-arg-in-generator,trailing-whitespace,execfile-builtin,bad-str-strip-call,raising-string,global-variable-undefined,missing-docstring,too-many-lines,astroid-error,assert-on-tuple,coerce-method,attribute-defined-outside-init,invalid-format-index,too-many-boolean-expressions,notimplemented-raised,delslice-method,redefined-builtin,raw_input-builtin,unused-import,mixed-format-string,misplaced-comparison-constant,old-style-class,too-many-statements,bad-except-order,invalid-all-object,input-builtin,wrong-spelling-in-docstring,unused-argument,unneeded-not,no-member,global-at-module-level,unicode-builtin,bad-whitespace,slots-on-old-class,not-an-iterable,line-too-long,undefined-loop-variable,zip-builtin-not-iterating,using-constant-test,unsupported-membership-test,global-variable-not-assigned,intern-builtin,dict-view-method,too-many-format-args,missing-kwoa,unsupported-binary-operation,bare-except,fixme,non-iterator-returned,redefined-outer-name,file-builtin,empty-docstring,inherit-non-class,useless-suppression,unrecognized-inline-option,redundant-unittest-assert,basestring-builtin,unidiomatic-typecheck,nonstandard-exception,bad-mcs-method-argument,long-builtin,non-parent-init-called,too-many-public-methods,dict-iter-method,assignment-from-no-return,bad-staticmethod-argument,unnecessary-semicolon,invalid-slots,nonzero-method,coerce-builtin,indexing-exception,getslice-method,filter-builtin-not-iterating,signature-differs,no-self-argument,unnecessary-lambda,assignment-from-none,long-suffix,print-statement,redefined-variable-type,logging-too-many-args,no-self-use,bad-continuation,relative-import,duplicate-argument-name,no-absolute-import,missing-format-argument-key,unpacking-in-except,unsubscriptable-object,deprecated-module,unreachable,bad-open-mode,too-many-locals,too-few-public-methods,deprecated-pragma,backtick,wrong-import-order,invalid-sequence-index,missing-format-attribute,broad-except,too-many-function-args,misplaced-future,deprecated-lambda,invalid-slice-index,setslice-method,apply-builtin,repeated-keyword,duplicate-key,old-octal-literal,blacklisted-name,too-many-return-statements,raising-non-exception,super-on-old-class,undefined-variable,map-builtin-not-iterating,missing-final-newline,reduce-builtin,logging-format-interpolation,property-on-old-class,exec-used,too-many-nested-blocks,unused-wildcard-import,not-in-loop,old-ne-operator,buffer-builtin,unexpected-special-method-signature,duplicate-except,star-needs-assignment-target,ungrouped-imports,method-check-failed,init-is-generator,import-self,method-hidden,redefine-in-handler,suppressed-message,global-statement,no-value-for-parameter,nonexistent-operator,parameter-unpacking,bad-builtin,catching-non-exception,bad-format-string,not-async-context-manager,not-context-manager,mixed-line-endings,function-redefined,cell-var-from-loop,binary-op-exception,wrong-spelling-in-comment,dangerous-default-value,range-builtin-not-iterating,locally-enabled,abstract-class-instantiated,lowercase-l-suffix,missing-super-argument,standarderror-builtin,bad-format-character,anomalous-backslash-in-string,anomalous-unicode-escape-in-string,cmp-builtin,abstract-method,too-many-instance-attributes,no-name-in-module,fatal,return-in-init,file-ignored,raising-bad-type,truncated-format-string,yield-outside-function,deprecated-method,eval-used,used-before-assignment,wildcard-import,unichr-builtin,logging-unsupported-format,reload-builtin,bad-exception-context,invalid-slots-object,format-combined-specification,missing-format-string-key,simplifiable-if-statement,import-star-module-level,format-needs-mapping,hex-method,raw-checker-failed,using-cmp-argument,assigning-non-slot,old-division,inconsistent-mro,duplicate-code,unexpected-line-ending-format,import-error,continue-in-finally,locally-disabled,return-outside-function,invalid-characters-in-docstring,too-many-branches,bad-inline-option,oct-method,too-many-ancestors,redundant-keyword-arg,too-few-format-args,reimported,unpacking-non-sequence,no-classmethod-decorator,mixed-indentation,confusing-with-statement,undefined-all-variable,useless-else-on-loop,access-member-before-definition,too-many-star-expressions,bad-super-call,arguments-differ,multiple-imports,super-init-not-called,unused-variable,bad-option-value,too-many-arguments,next-method-called,bad-classmethod-argument,nonlocal-and-global,metaclass-assignment,duplicate-bases,invalid-star-assignment-target,not-a-mapping,unbalanced-tuple-unpacking,logging-too-few-args,invalid-unary-operand-type,no-method-argument,parse-error,superfluous-parens,no-staticmethod-decorator,syntax-error,pointless-statement,unused-format-string-argument,boolean-datetime,no-init,bad-format-string-key,cyclic-import,yield-inside-async-function,xrange-builtin,logging-not-lazy,unused-format-string-key,lost-exception,unexpected-keyword-arg


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=80

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[BASIC]

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input,file

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=__.*__

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set). This supports can work
# with qualified names.
ignored-classes=SQLObject

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=REQUEST,acl_users,aq_parent


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_$|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
